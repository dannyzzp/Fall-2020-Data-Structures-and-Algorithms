#include <iostream>
#include <string.h>
using namespace std;
#define SIZE 6
#define INF 1000
#define NO 999

int cost[6][6]={{0,6,NO,10,NO,1},
                {NO,0,3,NO,NO,NO},
                {NO,NO,0,3,NO,NO},
                {NO,NO,NO,0,NO,NO},
                {NO,1,NO,NO,0,NO},
                {NO,4,NO,NO,2,0}};

int dist[6]={0,INF,INF,INF,INF,INF};

bool visited[6]={false,false,false,false,false,false};

int getNearest(int min){
    for(int j=0;j<6;j++){
        if(dist[j]!=INF){    
            if(cost[min][j]!=NO&&cost[min][j]!=0&&dist[j]>dist[min]+cost[min][j]){
                dist[j]=dist[min]+cost[min][j];        
            }
        }
        else{
            if(cost[min][j]!=NO&&cost[min][j]!=0){
                dist[j]=dist[min]+cost[min][j];
            }
        }
    }
}

int getMin(){
    int min;
    int i=0;
   
    for(i=0;i<6;i++){
        if(visited[i]==false){
            min=i;
            break;
        }
    }
   
    for(i=0;i<6;i++){
        if(dist[i]<dist[min]&&visited[i]==false){
            min=i;
        }
    }
   
    visited[min]=true;
    return min;
}

int main()
{
   int counter;
   int ii=0;
   
   while(counter!=6){
       counter=0;
       
       int min=getMin();
       
       getNearest(min);
       
       
       for(int i=0;i<6;i++){
           if(visited[i]==true){
               counter++;
           }
       }
       
       cout<<"Output after iteration #"<<ii+1<<endl;
       
       for(int i=0;i<6;i++){
         
          if(dist[i]!=1000){
            cout<<"Node "<<i<<" is now "<<dist[i]<<" units away from start point"<<endl;
          }
          else{
            cout<<"Node "<<i<<" is now infinitely far away from start point"<<endl;  
          }
         
         
             
       }
       
       ii++;
       cout<<endl;
   }
   
   

    return 0;
}



